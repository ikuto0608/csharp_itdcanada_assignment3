#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace assignment3_ikuto
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="assignment3")]
	public partial class AccountHolderDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountHolder(AccountHolder instance);
    partial void UpdateAccountHolder(AccountHolder instance);
    partial void DeleteAccountHolder(AccountHolder instance);
    partial void InsertTranscript(Transcript instance);
    partial void UpdateTranscript(Transcript instance);
    partial void DeleteTranscript(Transcript instance);
    #endregion
		
		public AccountHolderDataClassesDataContext() : 
				base(global::assignment3_ikuto.Properties.Settings.Default.assignment3ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccountHolderDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountHolderDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountHolderDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountHolderDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountHolder> AccountHolders
		{
			get
			{
				return this.GetTable<AccountHolder>();
			}
		}
		
		public System.Data.Linq.Table<Transcript> Transcripts
		{
			get
			{
				return this.GetTable<Transcript>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account_holders")]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="Checking", Type=typeof(Checking))]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="Saving", Type=typeof(Saving))]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="Visa", Type=typeof(Visa), IsDefault=true)]
	public partial class AccountHolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _account_number;
		
		private string _account_type;
		
		private System.Nullable<int> _client_id;
		
		private string _password;
		
		private System.Nullable<double> _balance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onaccount_numberChanging(System.Nullable<int> value);
    partial void Onaccount_numberChanged();
    partial void Onaccount_typeChanging(string value);
    partial void Onaccount_typeChanged();
    partial void Onclient_idChanging(System.Nullable<int> value);
    partial void Onclient_idChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnbalanceChanging(System.Nullable<double> value);
    partial void OnbalanceChanged();
    #endregion
		
		public AccountHolder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="Int")]
		public System.Nullable<int> account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this.Onaccount_numberChanging(value);
					this.SendPropertyChanging();
					this._account_number = value;
					this.SendPropertyChanged("account_number");
					this.Onaccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_type", DbType="VarChar(255)", IsDiscriminator=true)]
		public string account_type
		{
			get
			{
				return this._account_type;
			}
			set
			{
				if ((this._account_type != value))
				{
					this.Onaccount_typeChanging(value);
					this.SendPropertyChanging();
					this._account_type = value;
					this.SendPropertyChanged("account_type");
					this.Onaccount_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int")]
		public System.Nullable<int> client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Float")]
		public System.Nullable<double> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Checking : AccountHolder
	{
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Checking()
		{
			OnCreated();
		}
	}
	
	public partial class Saving : AccountHolder
	{
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Saving()
		{
			OnCreated();
		}
	}
	
	public partial class Visa : AccountHolder
	{
		
		private System.Nullable<int> _credit_limit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncredit_limitChanging(System.Nullable<int> value);
    partial void Oncredit_limitChanged();
    #endregion
		
		public Visa()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_limit", DbType="Int")]
		public System.Nullable<int> credit_limit
		{
			get
			{
				return this._credit_limit;
			}
			set
			{
				if ((this._credit_limit != value))
				{
					this.Oncredit_limitChanging(value);
					this.SendPropertyChanging();
					this._credit_limit = value;
					this.SendPropertyChanged("credit_limit");
					this.Oncredit_limitChanged();
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transcripts")]
	public partial class Transcript : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _transacted_at;
		
		private string _transaction_type;
		
		private System.Nullable<double> _amount;
		
		private System.Nullable<int> _account_holder_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontransacted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ontransacted_atChanged();
    partial void Ontransaction_typeChanging(string value);
    partial void Ontransaction_typeChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void Onaccount_holder_idChanging(System.Nullable<int> value);
    partial void Onaccount_holder_idChanged();
    #endregion
		
		public Transcript()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transacted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> transacted_at
		{
			get
			{
				return this._transacted_at;
			}
			set
			{
				if ((this._transacted_at != value))
				{
					this.Ontransacted_atChanging(value);
					this.SendPropertyChanging();
					this._transacted_at = value;
					this.SendPropertyChanged("transacted_at");
					this.Ontransacted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_type", DbType="VarChar(255)")]
		public string transaction_type
		{
			get
			{
				return this._transaction_type;
			}
			set
			{
				if ((this._transaction_type != value))
				{
					this.Ontransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._transaction_type = value;
					this.SendPropertyChanged("transaction_type");
					this.Ontransaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_holder_id", DbType="Int")]
		public System.Nullable<int> account_holder_id
		{
			get
			{
				return this._account_holder_id;
			}
			set
			{
				if ((this._account_holder_id != value))
				{
					this.Onaccount_holder_idChanging(value);
					this.SendPropertyChanging();
					this._account_holder_id = value;
					this.SendPropertyChanged("account_holder_id");
					this.Onaccount_holder_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
